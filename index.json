[{"content":"","date":null,"permalink":"/posts/","section":"","summary":"","title":""},{"content":"open -a Docker # start Docker on MacOS docker run -it ubuntu:latest /bin/bash On the container:\napt update apt install -y curl curl --proto \u0026#39;=https\u0026#39; --tlsv1.2 -sSf -L https://install.determinate.systems/nix | \\ sh -s -- install --no-confirm --extra-conf \u0026#34;trusted-users = $(whoami)\u0026#34; It failed with this output:\ninfo: downloading installer https://install.determinate.systems/nix/tag/v3.0.0/nix-installer-aarch64-linux INFO nix-installer v3.0.0 Error: 0: Planner error 1: Error executing action 2: Action `create_upstream_init_service` errored 3: Action `configure_init_service` errored 4: Could not detect systemd; you may be able to get up and running without systemd with `nix-installer install linux --init none`. See https://github.com/DeterminateSystems/nix-installer#without-systemd-linux-only for documentation on usage and drawbacks. Location: /build/nix-installer-source/src/cli/subcommand/install/mod.rs:180 Backtrace omitted. Run with RUST_BACKTRACE=1 environment variable to display it. Run with RUST_BACKTRACE=full to include source snippets. Consider reporting this error using this URL: https://github.com/DeterminateSystems/nix-installer/issues/new?title=%3Cautogenerated-issue%3E\u0026amp;body=%23%23+Error%0A%60%60%60%0AError%3A+%0A+++0%3A+Planner+error%0A+++1%3A+Error+executing+action%0A+++2%3A+Action+%60create_upstream_init_service%60+errored%0A+++3%3A+Action+%60configure_init_service%60+errored%0A+++4%3A+Could+not+detect+systemd%3B+you+may+be+able+to+get+up+and+running+without+systemd+with+%60nix-installer+install+linux+--init+none%60.%0A++++++See+https%3A%2F%2Fgithub.com%2FDeterminateSystems%2Fnix-installer%23without-systemd-linux-only+for+documentation+on+usage+and+drawbacks.%0A%60%60%60%0A%0A%23%23+Metadata%0A%7Ckey%7Cvalue%7C%0A%7C--%7C--%7C%0A%7C**version**%7C3.0.0%7C%0A%7C**os**%7Clinux%7C%0A%7C**arch**%7Caarch64%7C%0A The error is because we don\u0026rsquo;t have systemd in this Ubuntu container. To confirm that you have systemd run this command:\nps -p 1 -o comm= bash If you get systemd in the output, you are using systemd.\nTo be able to install without systemd we can use nix-installer install linux --init none:\ncurl --proto \u0026#39;=https\u0026#39; --tlsv1.2 -sSf -L https://install.determinate.systems/nix | \\ sh -s -- install linux --init none --no-confirm --extra-conf \u0026#34;trusted-users = $(whoami)\u0026#34; To run Nix Health checks:\nnix --accept-flake-config run github:juspay/omnix health . /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh Reference: Install Nix.\n","date":"14 March 2025","permalink":"/posts/getting-started-with-nix-on-non-nixos/","section":"","summary":"open -a Docker # start Docker on MacOS docker run -it ubuntu:latest /bin/bash On the container:","title":"Installing Nix on an Ubuntu Docker Container"},{"content":"","date":null,"permalink":"/","section":"João Thallis","summary":"","title":"João Thallis"},{"content":"To infect your server with NixOS you need to run a non NixOS Linux distribution. It works on some Linux distributions, you can check the list of supported distributions here. You can use a virtual machine or a dedicated machine (locally or using a cloud provider).\nStep 1: Create SSH Keys #First, you need to create SSH keys to access your server. To infect your machine you need to have root access using SSH Keys, it\u0026rsquo;s not possible to infect a machine without SSH access because nixos-infect is not able to get your current password and set on the new operating system (NixOS).\nssh-keygen You need to copy your public key to the server. You can do this by running the following command:\nssh-copy-id root@your-server-ip If you are using a cloud provider, you can use the web interface to add your SSH key.\nTo copy your public key to the server, you can also use the following command:\ncat ~/.ssh/id_ed25519.pub | xclip # or pbcopy on macOS Verify that you can access your server using SSH:\nssh root@your-server-ip If you have more than one SSH key, you can specify the key to use with the -i flag:\nssh -i ~/.ssh/id_ed25519 root@your-server-ip Step 2: Infect Your Server #Now that you have access to your server, you can infect it with NixOS. If you are using a Virtual Machine or a dedicated machine, you can use the following command:\ncurl https://raw.githubusercontent.com/elitak/nixos-infect/master/nixos-infect | NIX_CHANNEL=nixos-23.05 bash -x If you are using a cloud provider, you can use cloud-init/user data mechanism interface to provide the script to infect your server. For example, on DigitalOcean, you can use the following script:\n#cloud-config runcmd: - curl https://raw.githubusercontent.com/elitak/nixos-infect/master/nixos-infect | PROVIDER=digitalocean NIX_CHANNEL=nixos-23.05 bash 2\u0026gt;\u0026amp;1 | tee /tmp/infect.log You can check what command to use on your cloud provider here.\nAfter a few minutes, your server will be infected with NixOS. You can access and verify that it worked:\nnix-shell -p freshfetch --command freshfetch ::::. \u0026#39;::::: ::::\u0026#39; root@nixos \u0026#39;::::: \u0026#39;:::::. ::::\u0026#39; ::::: \u0026#39;::::.::::: OS: NixOS 23.05 (Stoat) x86_64 .......:::::..... :::::::: Host: Droplet ::::::::::::::::::. :::::: ::::. Kernel: Linux 6.1.69 ::::::::::::::::::::: :::::. .::::\u0026#39; Uptime: 36 minutes ..... ::::\u0026#39; :::::\u0026#39; Packages: 0 ::::: \u0026#39;::\u0026#39; :::::\u0026#39; Shell: bash ........::::: \u0026#39; :::::::::::. Resolution: 1024x768 ::::::::::::: ::::::::::::: CPU: DO-Regular (1) @ 1.9953100681305MHz ::::::::::: .. ::::: Board: DigitalOcean Droplet .::::: .::: ::::: Memory: 68MB / 473MB .::::: ::::: \u0026#39;\u0026#39;\u0026#39;\u0026#39;\u0026#39; ..... ::::: \u0026#39;:::::. ......:::::::::::::\u0026#39; ::: ::::::. \u0026#39;:::::::::::::::::\u0026#39; .:::::::: \u0026#39;:::::::::: .::::\u0026#39;\u0026#39;::::. \u0026#39;::::. .::::\u0026#39; ::::. \u0026#39;::::. .:::: :::: \u0026#39;::::. Congratulations! You have successfully infected your server with NixOS.\n","date":"26 October 2024","permalink":"/posts/infecting-your-server-with-nixos/","section":"","summary":"To infect your server with NixOS you need to run a non NixOS Linux distribution.","title":"Infecting Your Server With Nixos"},{"content":"This post is about how you can use Neovim to have refactoring tooling inspired in Refactoring and your tooling from Learn Go with tests.\nExtract/Inline #I am using refactoring.nvim plugin.\nExtract Variable #vim.keymap.set(\u0026#34;x\u0026#34;, \u0026#34;\u0026lt;leader\u0026gt;rv\u0026#34;, function() require(\u0026#39;refactoring\u0026#39;).refactor(\u0026#39;Extract Variable\u0026#39;) end) You need to select the part of your code that you want to extract to a variable and then press \u0026lt;leader\u0026gt;rv.\nMore about extract variable: https://refactoring.guru/extract-variable\nInline Variable #vim.keymap.set({ \u0026#34;n\u0026#34;, \u0026#34;x\u0026#34; }, \u0026#34;\u0026lt;leader\u0026gt;ri\u0026#34;, function() require(\u0026#39;refactoring\u0026#39;).refactor(\u0026#39;Inline Variable\u0026#39;) end) It\u0026rsquo;s the inverse of extract variable. It will remove the variable and replace it with its value.\nExtract Method #vim.keymap.set(\u0026#34;x\u0026#34;, \u0026#34;\u0026lt;leader\u0026gt;re\u0026#34;, function() require(\u0026#39;refactoring\u0026#39;).refactor(\u0026#39;Extract Function\u0026#39;) end) Rename #Here my goal is to rename symbols accross the codebase. It is possible to achieve this using Language Server Protocol as demonstrated by mjlbach in this issue comment if the LSP support it.\nI am using lsp-zero with default keymaps. To rename I need to use the F2 key. For go using go using gopls it is working to rename accross the codebase.\nlocal lsp = require(\u0026#34;lsp-zero\u0026#34;) lsp.on_attach(function(client, bufnr) lsp.default_keymaps({buffer = bufnr}) end) Run Format and Goimports on Save #Using lsp-zero #-- Run gofmt/gofmpt, import packages automatically on save vim.api.nvim_create_autocmd(\u0026#39;BufWritePre\u0026#39;, { group = vim.api.nvim_create_augroup(\u0026#39;setGoFormatting\u0026#39;, { clear = true }), pattern = \u0026#39;*.go\u0026#39;, callback = function() local params = vim.lsp.util.make_range_params() params.context = { only = { \u0026#34;source.organizeImports\u0026#34; } } local result = vim.lsp.buf_request_sync(0, \u0026#34;textDocument/codeAction\u0026#34;, params, 2000) for _, res in pairs(result or {}) do for _, r in pairs(res.result or {}) do if r.edit then vim.lsp.util.apply_workspace_edit(r.edit, \u0026#34;utf-16\u0026#34;) else vim.lsp.buf.execute_command(r.command) end end end vim.lsp.buf.format() end }) Testing #I am using vim-test plugin to run tests.\nvim.cmd([[ let g:test#echo_command = 0 let test#python#runner = \u0026#39;pytest\u0026#39; if exists(\u0026#39;$TMUX\u0026#39;) let g:test#preserve_screen = 1 let g:test#strategy = \u0026#39;vimux\u0026#39; endif nmap \u0026lt;silent\u0026gt; \u0026lt;leader\u0026gt;t :TestNearest\u0026lt;CR\u0026gt; nmap \u0026lt;silent\u0026gt; \u0026lt;leader\u0026gt;T :TestFile\u0026lt;CR\u0026gt; nmap \u0026lt;silent\u0026gt; \u0026lt;leader\u0026gt;a :TestSuite\u0026lt;CR\u0026gt; nmap \u0026lt;silent\u0026gt; \u0026lt;leader\u0026gt;l :TestLast\u0026lt;CR\u0026gt; nmap \u0026lt;silent\u0026gt; \u0026lt;leader\u0026gt;g :TestVisit\u0026lt;CR\u0026gt; ]]) View Function Signature #I am using LSP for that, when I am in a function I can press K to see the function signature and when I am writing a function I can see the signature of the function I am calling.\nView Function Definition #I am using LSP for that, when I am in a function I can press gd to go to the definition of the function. I can use Ctrl-o to go back.\nFind Usage of a Symbol #I am using LSP for that, when I am in a symbol I can press gr to see the usages of the symbol.\n","date":"25 April 2024","permalink":"/posts/refactoring-using-neovim/","section":"","summary":"This post is about how you can use Neovim to have refactoring tooling inspired in Refactoring and your tooling from Learn Go with tests.","title":"Refactoring Using Neovim"},{"content":"I was having this issue when I was running the container.\nSolution if you are using colima to run Docker containers #colima start --arch aarch64 --vm-type=vz --vz-rosetta Thanks Felix Rabe for the answer.\n","date":"14 July 2023","permalink":"/posts/how-to-run-mssql-docker-image-on-apple-silicon/","section":"","summary":"I was having this issue when I was running the container.","title":"How to Run mssql Docker Image on Apple Silicon"},{"content":"It will be served inside the tailnet, as example I am using this blog.\nFor it, you will need to install hugo and tailscale.\nTo serve:\ngit clone git@github.com:joaothallis/joaothallis.github.io.git cd joaothallis.github.io hugo serve \u0026amp; sudo tailscale serve tcp:1313 tcp://127.0.0.1:1313 # to get the URL tailscale serve status | head -1 | grep -oP \u0026#34;(?\u0026lt;=tcp://)[^ ]+\u0026#34; Now with the URL you can access it in any device inside the tailnet.\nTo stop serving:\nsudo tailscale serve tcp:1313 tcp://127.0.0.1:1313 off kill hugo ","date":"23 May 2023","permalink":"/posts/serving-web-server-using-tailscale/","section":"","summary":"It will be served inside the tailnet, as example I am using this blog.","title":"Serving Web Server Using Tailscale"},{"content":"I am following the book Make: Learn Electronics with Arduino to learn electronics.\nWe are going to use an Arduino Uno to learn electronics. We will need some parts and tools to start.\nArduino Uno Parts List # Breadboard USB A-B cable 9-volt battery 9-12-volt power supply 9-volt battery cap or holder Assorted LEDS, a variety of colors Assorted resistors 10K potentiometer 3 momentary switches/buttons Photoresistor Speaker, 8 ohm 2 servo motors Jumper wires Tools # Digital multimeter with removable leads, and that is is fused Needle-nose pliers Wire strippers ","date":"26 April 2023","permalink":"/posts/parts-and-tools-to-learn-electronics-with-arduino/","section":"","summary":"I am following the book Make: Learn Electronics with Arduino to learn electronics.","title":"Parts and Tools to Learn Electronics With Arduino"},{"content":" Install node_exporter brew install node_exporter Start node_exporter brew services start node_exporter Now you can see the logs at localhost:9100/metrics open -n -a Safari localhost:9100/metrics ","date":"27 March 2023","permalink":"/posts/up-and-running-prometheus-node-exporter-on-macos/","section":"","summary":" Install node_exporter brew install node_exporter Start node_exporter brew services start node_exporter Now you can see the logs at localhost:9100/metrics open -n -a Safari localhost:9100/metrics ","title":"Up and Running Prometheus node_exporter on macOS"},{"content":" Install node_exporter sudo apt install prometheus-node-exporter Start node_exporter sudo service prometheus-node-exporter start Now you can see the logs at localhost:9100/metrics export DISPLAY=:0 export BROWSER=/usr/bin/wslview open localhost:9100/metrics ","date":"16 December 2022","permalink":"/posts/up-and-running-prometheus-node-exporter-on-wsl/","section":"","summary":" Install node_exporter sudo apt install prometheus-node-exporter Start node_exporter sudo service prometheus-node-exporter start Now you can see the logs at localhost:9100/metrics export DISPLAY=:0 export BROWSER=/usr/bin/wslview open localhost:9100/metrics ","title":"Up and Running Prometheus node_exporter on WSL"},{"content":"I am a Python and Elixir backend software developer with a strong experience building resilient and distributed systems, passionate about discovering new and innovative solutions designed to improve experience with technology while helping business grow.\nI have experience using tools such as Postgres, Docker and Kubernetes. I am also interested in DevOps to optimize the company\u0026rsquo;s multiple processes through automation. I\u0026rsquo;m enthusiastic about self-teaching myself about new concepts creating things.\nWhile not working on my daily job, I may be hacking on open source, reading books, creating music, writing about topics that interest me or playing some game (Magic: The Gathering Arena and Call of Duty: Warzone).\nI am interested in programming languages, neovim, monitoring and audiovisual. Feel free to ping me somewhere if you want to chat about any of that. 🐈\nBusiness Legal Name: Joao Thallis Lima de Melo LTDA\n","date":"1 January 0001","permalink":"/about/","section":"João Thallis","summary":"I am a Python and Elixir backend software developer with a strong experience building resilient and distributed systems, passionate about discovering new and innovative solutions designed to improve experience with technology while helping business grow.","title":"About"},{"content":"","date":null,"permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":null,"permalink":"/tags/","section":"Tags","summary":"","title":"Tags"}]